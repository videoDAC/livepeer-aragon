{"version":3,"sources":["../../../test/helpers/rpc.js"],"names":["RPC","web3","method","arg","req","jsonrpc","id","Date","getTime","params","Promise","resolve","reject","currentProvider","sendAsync","err","result","error","Error","message","time","then","res","snapshotId","blocks","seconds","getBlockNumberAsync","currentBlock","targetBlock","waitUntilBlock","increaseTime","mine","blockMultiple","multiples","additionalBlocks","nextBlockMultiple","eth","getBlockNumber","blockNum","currentBlockNum","remainder"],"mappings":"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","file":"rpc.js","sourcesContent":["export default class RPC {\n    constructor(web3) {\n        this.web3 = web3\n    }\n\n    sendAsync(method, arg) {\n        const req = {\n            jsonrpc: \"2.0\",\n            method: method,\n            id: new Date().getTime()\n        }\n\n        if (arg) req.params = arg\n\n        return new Promise((resolve, reject) => {\n            return this.web3.currentProvider.sendAsync(req, (err, result) => {\n                if (err) {\n                    reject(err)\n                } else if (result && result.error) {\n                    reject(new Error(\"RPC Error: \" + (result.error.message || result.error)))\n                } else {\n                    resolve(result)\n                }\n            })\n        })\n    }\n\n    // Change block time using TestRPC call evm_setTimestamp\n    // https://github.com/numerai/contract/blob/master/test/numeraire.js\n    increaseTime(time) {\n        return this.sendAsync(\"evm_increaseTime\", [time])\n    }\n\n    mine() {\n        return this.sendAsync(\"evm_mine\")\n    }\n\n    snapshot() {\n        return this.sendAsync(\"evm_snapshot\")\n            .then(res => res.result)\n    }\n\n    revert(snapshotId) {\n        return this.sendAsync(\"evm_revert\", [snapshotId])\n    }\n\n    async wait(blocks = 1, seconds = 20) {\n        let currentBlock = await this.getBlockNumberAsync()\n        const targetBlock = currentBlock + blocks\n        await this.waitUntilBlock(targetBlock, seconds)\n    }\n\n    async waitUntilBlock(targetBlock, seconds = 20) {\n        let currentBlock = await this.getBlockNumberAsync()\n\n        while (currentBlock < targetBlock) {\n            await this.increaseTime(seconds)\n            await this.mine()\n            currentBlock++\n        }\n    }\n\n    async waitUntilNextBlockMultiple(blockMultiple, multiples = 1, seconds = 20) {\n        const currentBlock = await this.getBlockNumberAsync()\n        const additionalBlocks = (multiples - 1) * blockMultiple\n        await this.waitUntilBlock(this.nextBlockMultiple(currentBlock, blockMultiple) + additionalBlocks)\n    }\n\n    getBlockNumberAsync() {\n        return new Promise((resolve, reject) => {\n            return this.web3.eth.getBlockNumber((err, blockNum) => {\n                if (err) {\n                    reject(err)\n                } else {\n                    resolve(blockNum)\n                }\n            })\n        })\n    }\n\n    nextBlockMultiple(currentBlockNum, blockMultiple) {\n        if (blockMultiple === 0) {\n            return currentBlockNum\n        }\n\n        const remainder = currentBlockNum % blockMultiple\n\n        if (remainder === 0) {\n            return currentBlockNum\n        }\n\n        return currentBlockNum + blockMultiple - remainder\n    }\n}\n"]}