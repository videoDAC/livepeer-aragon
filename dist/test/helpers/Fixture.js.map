{"version":3,"sources":["../../../test/helpers/Fixture.js"],"names":["Controller","artifacts","require","GenericMock","Fixture","web3","rpc","RPC","new","controller","deployMocks","unpause","deployAndRegister","token","minter","bondingManager","roundsManager","jobsManager","verifier","artifact","name","args","contract","commitHash","setContractInfo","address","snapshot","currentSnapshotId","revert"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;AAEA,IAAMA,aAAaC,UAAUC,OAAV,CAAkB,YAAlB,CAAnB;AACA,IAAMC,cAAcF,UAAUC,OAAV,CAAkB,aAAlB,CAApB;;IAEqBE,O;AACjB,qBAAYC,IAAZ,EAAkB;AAAA;;AACd,aAAKC,GAAL,GAAW,IAAIC,aAAJ,CAAQF,IAAR,CAAX;AACH;;;;;;;;;;;uCAG2BL,WAAWQ,GAAX,E;;;AAAxB,qCAAKC,U;;uCAEC,KAAKC,WAAL,E;;;;uCACA,KAAKD,UAAL,CAAgBE,OAAhB,E;;;;;;;;;;;;;;;;;;;;;;;;;uCAIa,KAAKC,iBAAL,CAAuBT,WAAvB,EAAoC,eAApC,C;;;AAAnB,qCAAKU,K;;uCACe,KAAKD,iBAAL,CAAuBT,WAAvB,EAAoC,QAApC,C;;;AAApB,qCAAKW,M;;uCACuB,KAAKF,iBAAL,CAAuBT,WAAvB,EAAoC,gBAApC,C;;;AAA5B,qCAAKY,c;;uCACsB,KAAKH,iBAAL,CAAuBT,WAAvB,EAAoC,eAApC,C;;;AAA3B,qCAAKa,a;;uCACoB,KAAKJ,iBAAL,CAAuBT,WAAvB,EAAoC,aAApC,C;;;AAAzB,qCAAKc,W;;uCACiB,KAAKL,iBAAL,CAAuBT,WAAvB,EAAoC,UAApC,C;;;AAAtB,qCAAKe,Q;;;;;;;;;;;;;;;;;;;kGAGeC,Q,EAAUC,I;kDAASC,I;AAAAA,wB;;;;;;;;;uCAChBF,SAASX,GAAT,oCAAgBa,IAAhB,E;;;AAAjBC,wC;;AACN;AACMC,0C,GAAa,O;;uCACb,KAAKd,UAAL,CAAgBe,eAAhB,CAAgC,yBAAWJ,IAAX,CAAhC,EAAkDE,SAASG,OAA3D,EAAoEF,UAApE,C;;;kEACCD,Q;;;;;;;;;;;;;;;;;;;;;;;;;uCAIwB,KAAKhB,GAAL,CAASoB,QAAT,E;;;AAA/B,qCAAKC,iB;;;;;;;;;;;;;;;;;;;;;;;;;uCAIC,KAAKrB,GAAL,CAASsB,MAAT,CAAgB,KAAKD,iBAArB,C;;;;;;;;;;;;;;;;;;;;;kBAlCOvB,O","file":"Fixture.js","sourcesContent":["import RPC from \"./rpc\"\nimport {contractId} from \"./helpers\"\n\nconst Controller = artifacts.require(\"Controller\")\nconst GenericMock = artifacts.require(\"GenericMock\")\n\nexport default class Fixture {\n    constructor(web3) {\n        this.rpc = new RPC(web3)\n    }\n\n    async deploy() {\n        this.controller = await Controller.new()\n\n        await this.deployMocks()\n        await this.controller.unpause()\n    }\n\n    async deployMocks() {\n        this.token = await this.deployAndRegister(GenericMock, \"LivepeerToken\")\n        this.minter = await this.deployAndRegister(GenericMock, \"Minter\")\n        this.bondingManager = await this.deployAndRegister(GenericMock, \"BondingManager\")\n        this.roundsManager = await this.deployAndRegister(GenericMock, \"RoundsManager\")\n        this.jobsManager = await this.deployAndRegister(GenericMock, \"JobsManager\")\n        this.verifier = await this.deployAndRegister(GenericMock, \"Verifier\")\n    }\n\n    async deployAndRegister(artifact, name, ...args) {\n        const contract = await artifact.new(...args)\n        // Use dummy Git commit hash\n        const commitHash = \"0x123\"\n        await this.controller.setContractInfo(contractId(name), contract.address, commitHash)\n        return contract\n    }\n\n    async setUp() {\n        this.currentSnapshotId = await this.rpc.snapshot()\n    }\n\n    async tearDown() {\n        await this.rpc.revert(this.currentSnapshotId)\n    }\n}\n"]}